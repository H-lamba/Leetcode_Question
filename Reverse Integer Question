 Today we Have solved A leetcode problem as Stated:- 
Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.
Assume the environment does not allow you to store 64-bit integers (signed or unsigned).


We Have Solved the Problem Using Cpp and Python.

Python Solution is as Follows:- 
class Solution(object):
    def reverse(self, x):
       self.x = x
       a = x
       reverse_x = str(abs(x))
       reverse_x = reverse_x[::-1]
       x = int(reverse_x)
       if(type(x)== int ):

        if(x>=(-(2**31)) and x<=(2**31-1)):
            if(a>0):
                return x
            else:
                return -x
        else:
            return 0 



Cpp Solution is As Follows: - 

class Solution {
public:
    int reverse(int x) {
        int ans = 0;
        while(x!=0)
        {
            if (ans<INT_MIN/10 || ans >INT_MAX/10)
            {
                return 0;
            }
            ans  = ans*10+x%10;
            x = x/10;
        }
        return ans;
        
    }
};
